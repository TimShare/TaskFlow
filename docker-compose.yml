version: "3.8"

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: task_service_db
    ports:
      - "5435:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka

  task_service:
    image: task_service:latest
    build: .
    command: /bin/sh -c "cd src/  && alembic upgrade head && uvicorn interface.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: task_service_db
      KAFKA_SERVERS: kafka:9092
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PROJECT_NAME: TaskFlow
      PROJECT_DESCRIPTION: "TaskFlow backend"
      PROJECT_VERSION: "0.1.0"
      DEBUG_MODE: "True"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_started

volumes:
  pg_data:
  redis_data:
